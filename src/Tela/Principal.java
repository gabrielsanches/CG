/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Tela;

import delaunay_triangulation.Delaunay_Triangulation;
import delaunay_triangulation.Point_dt;
import delaunay_triangulation.Triangle_dt;
import java.awt.Color;
import java.awt.Graphics;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import trabalho_cg.Calc;
import trabalho_cg.Triangulo;
import trabalho_cg.heightmap;

/**
 *
 * @author seven
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    double m[][];
    ArrayList<Triangulo> T;
    double VRP[] = new double[3];
    double P[] = new double[3];
    double n[];
    double Y[] = new double[3];
    double v[];
    double u[];
    double rt[][];
    double nVRP[][];
    double[][] mat_pontos_irregular = new double[4][450];
    double matriz_perspectiva[][];
    double matriz_composta[][];
    double centro_plano[] = new double[3];
    double centro_plano_rt[][];
    double dist_VRP_plano;

    Delaunay_Triangulation a;
    Delaunay_Triangulation Perspec_irregular;

    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jButton_Plotar = new javax.swing.JButton();
        jPanel_desenho = new javax.swing.JPanel();
        heightmap_radio = new javax.swing.JRadioButton();
        malha = new javax.swing.JRadioButton();
        jButton_gerar = new javax.swing.JButton();
        jButton_suavizar = new javax.swing.JButton();
        regular = new javax.swing.JRadioButton();
        irregular = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        texto_camx = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        texto_camy = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        texto_camz = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        ponto_obs_x = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        ponto_obs_y = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        ponto_obs_z = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        pers = new javax.swing.JRadioButton();
        salvar = new javax.swing.JButton();
        Abrir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Trabalho CG");
        setResizable(false);

        jButton_Plotar.setText("Plotar");
        jButton_Plotar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_PlotarActionPerformed(evt);
            }
        });

        jPanel_desenho.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel_desenhoLayout = new javax.swing.GroupLayout(jPanel_desenho);
        jPanel_desenho.setLayout(jPanel_desenhoLayout);
        jPanel_desenhoLayout.setHorizontalGroup(
            jPanel_desenhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );
        jPanel_desenhoLayout.setVerticalGroup(
            jPanel_desenhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        buttonGroup1.add(heightmap_radio);
        heightmap_radio.setText("Heightmap");

        buttonGroup1.add(malha);
        malha.setText("Malha");
        malha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                malhaActionPerformed(evt);
            }
        });

        jButton_gerar.setText("Gerar");
        jButton_gerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_gerarActionPerformed(evt);
            }
        });

        jButton_suavizar.setText("Suavizar");
        jButton_suavizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_suavizarActionPerformed(evt);
            }
        });

        buttonGroup2.add(regular);
        regular.setText("Regular");

        buttonGroup2.add(irregular);
        irregular.setText("Irregular");

        jLabel2.setText("Posição do Observador(VRP)");

        jLabel3.setText("X:");

        texto_camx.setText("0");
        texto_camx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                texto_camxActionPerformed(evt);
            }
        });

        jLabel4.setText("Y:");

        texto_camy.setText("255");

        jLabel5.setText("Z:");

        texto_camz.setText("255");

        jLabel6.setText("X:");

        ponto_obs_x.setText("100");
        ponto_obs_x.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ponto_obs_xActionPerformed(evt);
            }
        });

        jLabel7.setText("Y:");

        ponto_obs_y.setText("100");

        jLabel8.setText("Z:");

        ponto_obs_z.setText("0");

        jLabel9.setText("Ponto Observado");

        pers.setText("Perspectiva");

        salvar.setText("Salvar");
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });

        Abrir.setText("Abrir");
        Abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(heightmap_radio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(malha))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(regular)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(irregular))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pers)
                                .addGap(107, 107, 107)
                                .addComponent(jButton_Plotar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton_gerar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton_suavizar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel_desenho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(texto_camx, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(texto_camy, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(texto_camz, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ponto_obs_x, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ponto_obs_y, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ponto_obs_z, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel2)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jLabel9))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(salvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Abrir)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(heightmap_radio)
                    .addComponent(malha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(regular)
                    .addComponent(irregular))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pers)
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(texto_camx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(texto_camy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(texto_camz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ponto_obs_x, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(ponto_obs_y, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(ponto_obs_z, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel6)))
                .addContainerGap(300, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_gerar)
                    .addComponent(jButton_suavizar)
                    .addComponent(jButton_Plotar)
                    .addComponent(salvar)
                    .addComponent(Abrir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_desenho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_PlotarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_PlotarActionPerformed
        // TODO add your handling code here:
        func_plotar();


    }//GEN-LAST:event_jButton_PlotarActionPerformed

    private void jButton_gerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_gerarActionPerformed
        // TODO add your handling code here:
        if (regular.isSelected()) {
            m = heightmap.gerar_heightmap();
            T = heightmap.gerar_triangulos_regular();
        } else {
            if (irregular.isSelected()) {
                m = new double[4][450];
                Random r = new Random();
                a = new Delaunay_Triangulation();
                for (int i = 0; i < 450; i++) {
                    m[0][i] = r.nextFloat() * 200;
                    m[1][i] = r.nextFloat() * 200;
                    m[2][i] = r.nextFloat() * 40;
                    m[3][i] = 1;
                    a.insertPoint(new Point_dt(m[0][i], m[1][i], m[2][i]));
                }
            }
        }

        calc_gerar();
    }//GEN-LAST:event_jButton_gerarActionPerformed

    private void jButton_suavizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_suavizarActionPerformed
        // TODO add your handling code here:
        if (m != null) {
            Graphics g = jPanel_desenho.getGraphics();
            m = heightmap.suavizar_heightmap_regular(m);
            g.setColor(Color.white);
            g.fillRect(0, 0, 450, 400);
            for (int i = 0; i < 22500; i++) {
                g.setColor(new Color((float) m[2][i] / 40, (float) m[2][i] / 40, (float) m[2][i] / 40));
                g.drawLine((int) m[0][i] + 30, (int) m[1][i] + 30, (int) m[0][i] + 30, (int) m[1][i] + 30);
            }
        }
    }//GEN-LAST:event_jButton_suavizarActionPerformed

    private void malhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_malhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_malhaActionPerformed

    private void texto_camxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_texto_camxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_texto_camxActionPerformed

    private void ponto_obs_xActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ponto_obs_xActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ponto_obs_xActionPerformed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
        String nome = JOptionPane.showInputDialog("Nome desejado para o arquivo");
        FileOutputStream fo = null;
        try {
            fo = new FileOutputStream(nome + ".cg");
            ObjectOutputStream oo = new ObjectOutputStream(fo);
            oo.writeObject(m); // serializo objeto cat
            oo.close();

        } catch (FileNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fo.close();
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_salvarActionPerformed

    private void AbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirActionPerformed
        FileInputStream fi = null;
        String nome = JOptionPane.showInputDialog("Nome desejado para o arquivo");
        try {
            fi = new FileInputStream(nome + ".cg");
            ObjectInputStream oi = new ObjectInputStream(fi);
            Object o = oi.readObject();
            oi.close();
            m = (double[][]) o;
            T = heightmap.gerar_triangulos_regular();

        } catch (FileNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fi.close();
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_AbrirActionPerformed

    public void func_plotar() {
        calc_gerar();
        Graphics g = jPanel_desenho.getGraphics();
        g.setColor(Color.white);
        g.fillRect(0, 0, 450, 400);
        if (m != null) {
            if (heightmap_radio.isSelected()) {
                for (int i = 0; i < 22500; i++) {
                    g.setColor(new Color((float) m[2][i] / 40, (float) m[2][i] / 40, (float) m[2][i] / 40));
                    g.drawLine((int) m[0][i] + 30, (int) m[1][i] + 30, (int) m[0][i] + 30, (int) m[1][i] + 30);
                }
            } else {
                g.setColor(new Color(1, 1, 1));
                if (malha.isSelected()) {
                    if (pers.isSelected()) {
                        matriz_perspectiva = Calc.matriz_perspectiva(nVRP, centro_plano_rt, dist_VRP_plano);

                        System.out.println("\nMatriz Composta");
                        matriz_composta = Calc.montar_matriz_composta(rt, matriz_perspectiva);
                        for (int i = 0; i < 4; i++) {
                            for (int j = 0; j < 4; j++) {
                                System.out.print("\t" + matriz_composta[i][j]);
                            }
                            System.out.println("");
                        }
                        double[][] Obj_perspectiva = Calc.objeto_perspectiva(Calc.multiplicar_matriz(matriz_composta, m));

                        System.out.println("");
                        for (int i = 0; i < 3; i++) {
                            for (int j = 0; j < 34; j++) {
                                System.out.print("\t" + Obj_perspectiva[i][j]);
                            }
                            System.out.println("");
                        }
                        int[] viewport = {0, 0, 300, 300};
                        double[][] perspectiva = Calc.montar_perspetiva_srt(150, 150, centro_plano_rt, viewport);

                        System.out.println("");
                        for (int i = 0; i < 3; i++) {
                            for (int j = 0; j < 3; j++) {
                                System.out.print("\t" + perspectiva[i][j]);
                            }
                            System.out.println("");
                        }

                        double[][] pontos_final = Calc.multiplicar_matriz(perspectiva, Obj_perspectiva);

                        System.out.println("\nPontos finais");
                        for (int i = 0; i < 3; i++) {
                            for (int j = 0; j < 34; j++) {
                                System.out.print("\t" + (int) Math.round(pontos_final[i][j]));
                            }
                            System.out.println("");
                        }

                        if (regular.isSelected()) {

                            for (Triangulo t : T) {
                                int a[] = t.getTriangulo();
                                g.drawLine((int) pontos_final[0][a[0]] + 30, (int) pontos_final[1][a[0]] + 30, (int) pontos_final[0][a[1]] + 30, (int) pontos_final[1][a[1]] + 30);

                                g.drawLine((int) pontos_final[0][a[1]] + 30, (int) pontos_final[1][a[1]] + 30, (int) pontos_final[0][a[2]] + 30, (int) pontos_final[1][a[2]] + 30);
                                g.drawLine((int) pontos_final[0][a[2]] + 30, (int) pontos_final[1][a[2]] + 30, (int) pontos_final[0][a[0]] + 30, (int) pontos_final[1][a[0]] + 30);
                            }
                        } else {
                            Random r = new Random();
                            Perspec_irregular = new Delaunay_Triangulation();
                            for (int i = 0; i < 450; i++) {
                                Perspec_irregular.insertPoint(new Point_dt((int) Math.round(pontos_final[0][i]), (int) Math.round(pontos_final[1][i]), (int) Math.round(pontos_final[2][i])));
                            }

                            Iterator<Triangle_dt> t = Perspec_irregular.trianglesIterator();
                            Triangle_dt teste;
                            while (t.hasNext()) {
                                teste = t.next();
                                g.drawLine((int) teste.p1().x() + 30, (int) teste.p1().y() + 30, (int) teste.p2().x() + 30, (int) teste.p2().y() + 30);
                                if (teste.p3() != null) {
                                    g.drawLine((int) teste.p2().x() + 30, (int) teste.p2().y() + 30, (int) teste.p3().x() + 30, (int) teste.p3().y() + 30);
                                    g.drawLine((int) teste.p3().x() + 30, (int) teste.p3().y() + 30, (int) teste.p1().x() + 30, (int) teste.p1().y() + 30);
                                }
                            }
                        }
                    } else {
                        if (regular.isSelected()) {
                            g.setColor(new Color(1, 1, 1));
                            System.out.println("Desenhando Regular");
                            for (Triangulo t : T) {
                                int a[] = t.getTriangulo();
                                g.drawLine((int) m[0][a[0]] + 30, (int) m[1][a[0]] + 30, (int) m[0][a[1]] + 30, (int) m[1][a[1]] + 30);

                                g.drawLine((int) m[0][a[1]] + 30, (int) m[1][a[1]] + 30, (int) m[0][a[2]] + 30, (int) m[1][a[2]] + 30);
                                g.drawLine((int) m[0][a[2]] + 30, (int) m[1][a[2]] + 30, (int) m[0][a[0]] + 30, (int) m[1][a[0]] + 30);
                            }
                        } else {
                            g.setColor(new Color(1, 1, 1));
                            Iterator<Triangle_dt> t = a.trianglesIterator();
                            Triangle_dt teste;
                            while (t.hasNext()) {
                                teste = t.next();
                                g.drawLine((int) teste.p1().x() + 30, (int) teste.p1().y() + 30, (int) teste.p2().x() + 30, (int) teste.p2().y() + 30);
                                if (teste.p3() != null) {
                                    g.drawLine((int) teste.p2().x() + 30, (int) teste.p2().y() + 30, (int) teste.p3().x() + 30, (int) teste.p3().y() + 30);
                                    g.drawLine((int) teste.p3().x() + 30, (int) teste.p3().y() + 30, (int) teste.p1().x() + 30, (int) teste.p1().y() + 30);
                                }

                            }
                        }
                    }
                }
            }
        }
    }

    public void calc_gerar() {
        VRP[0] = Integer.parseInt(texto_camx.getText());
        VRP[1] = Integer.parseInt(texto_camy.getText());
        VRP[2] = Integer.parseInt(texto_camz.getText());
        centro_plano[0] = 75;
        centro_plano[1] = 75;
        centro_plano[2] = 20;
//        centro_plano[0] = 2.5;
//        centro_plano[1] = 10;
//        centro_plano[2] = 10;
        P[0] = Integer.parseInt(ponto_obs_x.getText());
        P[1] = Integer.parseInt(ponto_obs_y.getText());
        P[2] = Integer.parseInt(ponto_obs_z.getText());
        n = Calc.calcular_vetor_n(VRP, P);
        Y[0] = 0;
        Y[1] = 1;
        Y[2] = 0;
        v = Calc.calcular_vetor_v(n, Y);
        u = Calc.calcular_vetor_u(n, v);

        System.out.println("Matriz RT");
        rt = Calc.calcular_matriz_RT(VRP, u, v, n);
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                System.out.print("\t" + rt[i][j]);
            }
            System.out.println("");
        }
        //CALCULO DO VRP DE TELA
        nVRP = Calc.posicao_obseravador(VRP, rt);
        System.out.println("VRP'");
        for (int i = 0; i < 4; i++) {
            System.out.print(nVRP[i][0] + " ");
        }
        System.out.println("");
        //CALCULO PONTO DO CENTRO DO PLANO
        centro_plano_rt = Calc.posicao_centro_plano(centro_plano, rt);
        System.out.println("Centro_P'");
        for (int i = 0; i < 4; i++) {
            System.out.print(centro_plano_rt[i][0] + " ");
        }
        //DISTANCIA ENTRE VRP E PLANO DE PROJECAO.
        dist_VRP_plano = Math.sqrt(Math.pow((centro_plano_rt[0][0] - nVRP[0][0]), 2) + Math.pow((centro_plano_rt[1][0] - nVRP[1][0]), 2) + Math.pow((centro_plano_rt[2][0] - nVRP[2][0]), 2));

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Abrir;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JRadioButton heightmap_radio;
    private javax.swing.JRadioButton irregular;
    private javax.swing.JButton jButton_Plotar;
    private javax.swing.JButton jButton_gerar;
    private javax.swing.JButton jButton_suavizar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel_desenho;
    private javax.swing.JRadioButton malha;
    private javax.swing.JRadioButton pers;
    private javax.swing.JTextField ponto_obs_x;
    private javax.swing.JTextField ponto_obs_y;
    private javax.swing.JTextField ponto_obs_z;
    private javax.swing.JRadioButton regular;
    private javax.swing.JButton salvar;
    private javax.swing.JTextField texto_camx;
    private javax.swing.JTextField texto_camy;
    private javax.swing.JTextField texto_camz;
    // End of variables declaration//GEN-END:variables
}
